version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: xps_xrf_db
    environment:
      POSTGRES_DB: semiconductor_lab
      POSTGRES_USER: labuser
      POSTGRES_PASSWORD: labpass123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U labuser"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: xps_xrf_api
    environment:
      DATABASE_URL: postgresql://labuser:labpass123@postgres:5432/semiconductor_lab
      API_PORT: 8011
      LOG_LEVEL: INFO
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./data:/app/data
      - ./logs:/app/logs
    ports:
      - "8011:8011"
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn src.api:app --host 0.0.0.0 --port 8011 --reload

  # Frontend UI Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: xps_xrf_ui
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8011
    volumes:
      - ./ui:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3011:3000"
    depends_on:
      - backend
    command: npm run dev

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: xps_xrf_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: xps_xrf_proxy
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: xps_xrf_network
